# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
  - feature/*

stages:
- stage: BuildApplication
  jobs:
  - job: buildJob
    timeoutInMinutes: 10
    pool:
      name: Raspberry3Pool
      demands: 
      - dotnet
    variables:
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Debug'
    steps:
    - task: DotNetCoreCLI@0
      inputs:
        command: build
        projects: LiveHost/LiveHost.csproj
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s'
        artifact: 'BuildDrop'
        publishLocation: 'pipeline'
- stage: DeployApplication
  dependsOn: BuildApplication
  jobs:
    - deployment: deploy
      displayName: 'deploy code on raspberry pi 3'
      pool: 
        name: Raspberry3Pool
        demands: dotnet
      workspace:
        clean: all
      environment:
        name: respberry3
      strategy: 
        runOnce:
          deploy:
            steps:
              - bash: 'sudo rm -rf /var/www/saverbackend/BuildDrop'
              - bash: 'sudo cp -r /home/pi/azureagent/_work/1/BuildDrop /var/www/saverbackend'
              - task: Bash@3
                inputs:
                  targetType: 'inline'
                  script: |
                    cd /var/www/saverbackend/BuildDrop/SaverBackend

                    sudo dotnet publish --configuration Release
                  
                    sudo mv /home/pi/wwwroot/ /var/www/saverbackend/BuildDrop/SaverBackend/bin/Release/net6.0/                  
                    sudo service nginx restart
                    sudo service bananas restart
